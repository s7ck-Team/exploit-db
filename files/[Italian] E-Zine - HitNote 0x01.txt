    __  _____________   ______  ____________
   / / / /  _/_  __/ | / / __ \/_  __/ ____/
  / /_/ // /  / / /  |/ / / / / / / / __/
 / __  // /  / / / /|  / /_/ / / / / /___
/_/ /_/___/ /_/ /_/ |_/\____/ /_/ /_____/ [0x01 :: June 2010]
                Hackkappatoio Isn't The Name Of This Ezine

http://hitnote.gotdns.org :: http://unofficialhj.gotdns.org

Indice:

* 0x00 . Legion of Hackkappatoio
* 0x01 . Porte Logiche
* 0x02 . Il "suicidio" greco
* 0x03 . Gnu Privacy Guard: iniziamo dalla teoria
* 0x04 . Polybius
* 0x05 . TrueCrypt
* 0x06 . Google e Pac-man, il connubio perfetto!
* 0x07 . Anatomia del Cosmac Elf
* 0x08 . Il suono
* 0x09 . Riddle
* 0x0A . Ringraziamenti


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


***********************************
* 0x00 :: Legion of Hackkappatoio *
***********************************


E' passato così poco tempo e siamo già al secondo numero di HIT-NOTE!
Ringraziamo moltissimo i lettori, sia quelli che ci hanno riempito di complimenti e che hanno apprezzato il nostro lavoro, sia tutti quelli che ci hanno criticato; ed è a questi ultimi che diciamo: "Continuate a darci consigli e a criticarci!". 
Sì, perchè è banale ripeterlo sempre, ma le critiche sono costruttive, e grazie a quelle ricevute per il numero 0x00, abbiamo cercato di migliorare in toto il nuovo numero. Al giorno d'oggi pochi sanno apprezzare quel modo un po' rozzo di vomitare parole di "questi giovani". Ma alcuni ci riescono ancora e ringraziamo particolarmente chi, senza troppi problemi, ci insegna e ci regala la sua esperienza, ci insegna che non arrendersi è la strada per la vittoria e non demordere è quella per il successo.
Ognuno vuole la sua fetta di torta, c'è chi la ottiene e c'è chi la rifiuta dopo averla trovata: questione di punti di vista. Ma ciò che conta è condividere ogni singola cosa che possa essere utile al prossimo, perchè solo goccia dopo goccia la pozzanghera diventa oceano.
Quindi vi prego di apprezzare tutti voi l'essenza di ciò che abbiamo da dire, poichè l'unico mezzo che abbiamo per comunicarvelo è questo. Questa è la nostra voce.
Soprattutto siate critici perchè colui che non critica è colui che non ragiona.
Mi è stato detto "[...] dice di voler sconfiggere l'ignoranza ma nemmeno sa l'italiano [...]", ed io ringrazio chi me l'ha detto poichè mi ha dato una spinta a leggere di più.
Quindi accettiamo ciò che siamo e saremo liberi di essere noi stessi.

Ora non posso fare altro che augurarvi buona lettura.


d0ct0r

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


****************************
* 0x01 :: Le porte logiche *
****************************


T.T block, porte logiche, transistor e compagnia.

Come funziona una CPU.

T.T block è uno dei videogiochi più strani mai costruiti. Ne è saltata fuori una conversazione con gli amici di #0x90, in cui stavamo parlando di programmazione ed elettronica, a confronto.

Ma cosa centra un clone di arkanoid (o meglio, del suo antenato Breakout; stiamo parlando degli anni '70 =P) con le porte logiche, i transistor e compagnia??

Semplice! T.T block non ha nè processori nè memorie ROM (infatti, anni addietro, cercando arkanoid per mame, lo scoprii, o meglio, non trovai nessuna ROM di questo clone xD) bensì utilizza porte logiche, e in gran quantità :P

Le porte logiche sono ciò che sta dietro a un processore, e ad ogni sorta di gingillo che abbia a che fare con l'elettronica digitale.

T.T block, pur essendo un cassone dimenticato, resta una pietra miliare in questo àmbito.

-------------- NOT ----------------

Il suo simbolo è un triangolo con un cerchietto nel vertice dell'uscita (è proprio il cerchietto ad indicare la 'negazione'):

       |\
IN ----| >0---- OUT
       |/ 

Nega ogni valore: se voi gli date un input 1, lui vi ritorna un output 0, e viceversa.
La sua tabella di verità è questa:

+----+-----+
| IN | OUT |
+----+-----+
|  1 |   0 |
+----+-----+
|  0 |   1 |
+----+-----+

-------------- AND ----------------

Il suo simbolo è... una "D":

        ____
IN ----|    \
       |     )---- OUT
IN ----|____/

Riceve due valori in input, ma dà un output pari a 1 solo se tutti ed due i valori in input sono pari a 1.
Praticamente esegue l'operazione logica "e" che usiamo anche noi in italiano: 'Ho mangiato la pasta e la pizza': questa frase è vera SOLO SE mangi la pasta E la pizza e non solo una delle due.

La sua tabella di verità è:

+-----+-----+-----+
| IN1 | IN2 | OUT |
+-----+-----+-----+
|   0 |   0 |   0 |
+-----+-----+-----+
|   0 |   1 |   0 |
+-----+-----+-----+
|   1 |   0 |   0 |
+-----+-----+-----+
|   1 |   1 |   1 |
+-----+-----+-----+


---------------- OR ----------------

E' una porta che riceve due IN e se almeno uno dei due è 1 restituisce 1 in out.
Il simbolo(anche se non si vede bene) è una semiluna:

        ____ 
IN ----\    \
        )    )---- OUT
IN ----/____/

Esegue l'operazione logica "o". Esempio: 'Ho mangiato la pasta o la pizza' è vera (fornisce 1 in OUT) se mangi la pasta O la pizza (cioè se almeno uno oppure entrambi gli IN sono a 1); ed è falsa se non mangi nessuna delle 2.

La sua tabella di verità è:

+-----+-----+-----+
| IN1 | IN2 | OUT |
+-----+-----+-----+
|   0 |   0 |   0 |
+-----+-----+-----+
|   0 |   1 |   1 |
+-----+-----+-----+
|   1 |   0 |   1 |
+-----+-----+-----+
|   1 |   1 |   1 |
+-----+-----+-----+


Ed ora le porte logiche 'composte': avendo a disposizione AND, OR e NOT si possono costruire:

---------------- XOR ----------------

Tanto per iniziare ecco il simbolo:

          ____ 
IN ----\-\    \
        ) )    )---- OUT
IN ----/-/____/

E' come la porta OR, ma con una «banda» che la precede.

Questa porta riceve due IN, ma restituisce un OUT pari a 1 se E SOLO SE uno solo degli IN è a 1.
In tutti gli altri casi, dà 0 in OUT.

E' una porta logica composta, dato che è possibile costruirla combinando:
[IN1 AND (NOT IN2)] OR [(NOT IN1) AND IN2] = OUT

La sua tabella di verità è:

+-----+-----+-----+
| IN1 | IN2 | OUT |
+-----+-----+-----+
|   0 |   0 |   0 |
+-----+-----+-----+
|   0 |   1 |   1 |
+-----+-----+-----+
|   1 |   0 |   1 |
+-----+-----+-----+
|   1 |   1 |   0 |
+-----+-----+-----+


---------------- NAND & NOR ----------------

Sono degli AND e degli OR in cui a cui è collegato un NOT all'OUT, il quale NOT inverte semplicemente lo stato dell'OUT: in una NAND si ha l'OUT a 1 solo quando un IN è a 1 oppure quando nessun IN è a 1.

Si indica aggiungendo al simbolo del AND o del OR un cerchietto, come nel NOT:

         ____
IN1 ----|    \
        |     )O---- OUT
IN2 ----|____/
         ____ 
IN1 ----\    \
         )    )O---- OUT
IN2 ----/____/

Le tabelle di verità sono:

NAND                NOR
+-----+-----+-----+ +-----+-----+-----+
| IN1 | IN2 | OUT | | IN1 | IN2 | OUT |
+-----+-----+-----+ +-----+-----+-----+ 
|   0 |   0 |   1 | |   0 |   0 |   1 | 
+-----+-----+-----+ +-----+-----+-----+ 
|   0 |   1 |   1 | |   0 |   1 |   0 | 
+-----+-----+-----+ +-----+-----+-----+ 
|   1 |   0 |   1 | |   1 |   0 |   0 | 
+-----+-----+-----+ +-----+-----+-----+ 
|   1 |   1 |   0 | |   1 |   1 |   0 | 
+-----+-----+-----+ +-----+-----+-----+ 


--------------------------------

Ora, pensate a come funziona una somma binaria:

+------+------+-------+-------+
| VAL1 | VAL2 | SOMMA | RESTO |
+------+------+-------+-------+
|    0 |    0 |     0 |     0 |
+------+------+-------+-------+
|    0 |    1 |     1 |     0 |
+------+------+-------+-------+
|    1 |    0 |     1 |     0 |
+------+------+-------+-------+
|    1 |    1 |     0 |     1 |
+------+------+-------+-------+

Se ci fate caso, la somma corrisponde all'XOR di VAL1 e VAL2.
Il resto, invece, corrisponde ad una AND tra gli stessi.


Bene, con queste tre righe e un po' di ingegno siete in grado di poter realizzare addirittura dei rudimentali processori (infatti i processori, dulcis in fundo, sono proprio composti da queste porte logiche ;] )

Vi do qualche link che può tornare utile:
T.T block secondo wikipedia Porte logiche da Hacknowledge


Qui turbocotoletta, alla prossima!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


*******************************
* 0x02 :: Il "suicidio" greco *
*******************************


Lo sò, questa è una ezine che parla prevalentemente di informatica, e questo articolo potrà risultare inutile e/o noioso per alcuni, ma purtroppo viviamo in un videogioco che si chiama Vita, e questo che sto per illustrare, chiamiamolo bug...
Sò anche di non essere un economista, di non essere un sociologo e nemmeno un giornalista; infatti è per questo che cercherò di illustrarvi l'articolo in maniera più semplice e chiara ch'io sia in grado di fare.

Tutti noi conosciamo la delicata situazione della Grecia: quello che sembra un effetto amplificato della crisi economica che ha colpito tutta Europa e che ci fa tanta paura.
Allora perchè solo la Grecia (insieme ad un paio di altri Paesi) è in una situazione così difficile e drammatica?
Rispondere è piuttosto semplice: la Grecia ha un debito pubblico superiore a qualsiasi altra «potenza» europea, ovvero i soldi che il governo deve restituire alle altre nazioni, che per un motivo o per un altro in passato gli hanno prestato, sono di più di quelli che effettivamente la Grecia può restituire, e quindi il governo non riesce a sanare i debiti.
La situazione è aggravata anche perchè la nazione la Grecia ha debiti anche verso i propri cittadini e verso alcune banche europee, da cui ha ricevuto ingenti prestiti.
Oltretutto la Grecia non sarebbe nemmeno potuta entrare in Europa, visto che da sempre è una nazione che purtroppo produce poco e spende parecchio ma che negli ultimi anni ha comunque sempre avuto un aumento costante del PIL; e questo grazie soprattutto all'aiuto del turismo, unica grande fonte di guadagno, di un paese bellissimo ma «spendaccione» (e oltretutto per avere l'«onore» di poter essere definita «potenza» a tutti gli effetti, e quindi di poter entrare in Europa, i bilanci sono stati «sapientemente» ritoccati).

La Grecia si salverà?
Chi vivrà vedrà, ma molto dipenderà dalle altre nazioni europee, e dai loro aiuti economici, che ultimamente sono stati stimati in circa 110 miliardi di Euro (dei quali, 5,5mld dovrà versarli l'Italia) e da come gli aiuti saranno gestiti dal governo greco.
Anche Spagna e Portogallo hanno grossi problemi, che però per ora sembrano essere più contenuti di quelli greci.
Anche la moneta europea ne sta risentendo parecchio, perdendo quotidianamente valore sulle altre monete, e ovviamente sentiamo ogni giorno parlare di come la Borsa sia altalenante.

Molti si chiedono se tutto ciò sia possibile che si replichi in Italia, e anche questa risposta è relativamente semplice: può darsi, ma ovviamente la situazione è più controllata; la crisi c'è e non stà affatto rientrando come invece ci dice qualcuno, ma per ora i tassi d'interesse rimangono più bassi di quelli della Grecia. Abbiamo sì problemi con le banche, ma non ai livelli di una bancarotta, e certo abbiamo un bel debito pubblico anche noi, ma più basso di quello dei Paesi europei che ora riversano in una crisi profonda. Insomma, sembriamo i più forti e fortunati tra i «poveracci» d'europa...
Questa crisi, sommata allo stato in cui versano Grecia, Spagna e Portogallo, forma una bella bomba che rischia di esplodere da un momento all'altro, e di colpire tutte le altre nazioni europee.

Bisogna quindi fare qualcosa, e farlo al più presto; ma le esigenze di alcuni governi sembrano altre... e il popolo è capace di manifestare scendendo in piazza ed unirsi solo se la propria squadra del cuore ha intenzione di vendere il suo giocatore migliore...

E' ora di cambiare, di maturare, di pensare con la propria testa, e non con la testa del «padrone»...
Non và tutto bene come ci dicono. Per ora non siamo nelle condizioni della Grecia, ma potremmo presto ritrovarcici.


dany15gni

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


****************************************************
* 0x03 :: Gnu Privacy Guard: iniziamo dalla teoria *
****************************************************


L'openPGP è tutt'ora uno dei pochi sistemi ancora in piedi, per inviarsi messaggi, foto, filmati, ecc., in modo TOP-SECRET!
Pochi lo usano quotidianamente; altri raramente; e molti non sanno neanche cosa sia... e non immaginano cosa si perdono! :P

Nel 1991 lo zio Phil scrisse un programma per crittare (alias cifrare, cioè nascondere ad occhi indiscreti) file e/o email; e lo chiamò PGP. 
Il progetto divenne tanto interessante da diventare uno standard: openPGP.

I soliti simpaticoni di GNU crearono una propria versione del programma per cifrare/decifrare via openPGP: GPG!

Spiegato in parole povere l'openPGP funziona così: ogni persona ha una coppia di chiavi (pubblica + privata), e diffonde quella pubblica tenendo per sè quella privata.
La chiave pubblica viene usata per cifrare i file, quella privata per decifrarli.

Esempio:
Maria vuole inviare un messaggio al suo amante Marco, ma non vuole farlo leggere assolutamente al suo ragazzo Stefano. 
Maria cerca sui vari keyserver online la chiave pubblica rilasciata da Marco. 
Appena trovata, Maria se la salva e la usa per cifrare l'email diretta a Marco.

L'email cifrata con la chiave pubblica di Marco, non potrà più essere letta neanche da Maria stessa: solo da Marco!

Stefano, accedendo al computer di Maria, potrà solo leggere una cosa simile:

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
From: <Maria> maria@foo.bar
To: <Marco> marco@foo.bar
Subject: Leggi!

-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.9 (GNU/Linux)

hQIOA9UcN3YRi0P9EAgAieHih37F+sTAY+p5gij9wJO/2+YOqvqsbbpKzhH6nU1V
m/7RvpwHIiTtxNRagpMvLnpiLBnMfdb9mUV82QhnJ4Fty3PjMNTqfQ2BFrs4h/XS
gqnJ1Y4g+pvg2oS3GlkaMZaTOI7HmvewU5ypZ48PNpX31p3DjonV3g1ofcL1KWQ6
iJYD9m5FSUoGUtjumT/6XZZE/Ysx/C540gZTCPM2dTYGN1n9ThVJK5jkSjHcYig6
pZ1cb9hOzPiOjmY2Jr0yFBgE3I9Lz+Xcwql/ycuG5VKHgxSVJq0s4Y9hxPyIiozH
xQU7wtYzPDw38m2zuKhcrhl8BhZriDoTIlhQc3F5hQf+KVi7NKtexxWftpsPYup5
Giwi+VzFHtIY3bagiq7qmcCbMsPjoDoOj5Mxzix8CS0R/2AnrqhQKLm8EQjVTf2d
mj8th+wkO2zZ7HtmG+WAJPkwRKbz6MhKMsABBeo9ruovrQfPAWmxJHqoK15frfou
gz9Q3AYN3pIqjMxMNRMvrAJnr28rlfIBR03+5ZXA3PWTkhlbMoHV0CFfHndD7XFQ
AuQ2XvsG6Rka5i62E+TC+DhNr/K38yUzmvOpryfWuElggX/krUytK6EwfuKdf44r
OMen2iXUgxPLqN54afmQQvI098CBDqK3Lf4RpjlltaOL6Vnc+9kg6vewE4TAg52/
htKZAUmIEB+1p1U1Ep2zneE63r8tPZadSAKO+F9QS/1oGgsavyWpdKHwySiTyH3v
u6lbgA0o26Fk/6exooxoxVM18QcgC/FFrN5/9v5Fu5kINUtMjzHljbHputypfKvk
XUqsdGDc8TH5Nns6ItmSupWeDEsyILA1dOqTToW+RRXvcKhwbaPOv6oXBBOMk3HJ
fSMn5uIeBv6XV9yw
=wcut
-----END PGP MESSAGE-----
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Niente male, neh?

L'openPGP può crittare usando un algoritmo asimmetrico (cioè usa due chiavi diverse: una per cifrare e una per decifrare): l'ElGamal o l'RSA. 
Personalmente preferisco l'RSA ;)

E' inoltre possibile aggiungere una firma digitale nel file, in modo da impedire una falsificazione del mittente. 
La firma si basa sulla chiave privata del mittente, e lo distingue inequivocabilmente.
Per firmare si può scegliere tra due algoritmi: RSA e DSA. 
Quest'ultimo è nettamente più ottimizzato per le firme (infatti il nome è acronimo di Digital Signature Algorithm).

Ultima particolarità: la chiave privata viene cifrata in AES (algoritmo simmetrico: serve una password per decifrare) prima di essere salvata nel computer, cosicchè, nel caso venisse rubata (o venisse recuperata da un backup), fornirebbe un'ultima sicurezza data dalla necessità di fornire una password per poter essere usata :P

Nel prossimo numero vedremo come installare ed utilizzare al meglio GPG sotto Sistemi Linux.


r0b0t82

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


********************
* 0x04 :: Polybius *
********************


Polybius: il leggendario "The Ring" del mondo dei VGames. Di cosa si tratta?

Recentemente sono venuto a conoscenza di una vecchia leggenda urbana: un cabinet, un videogioco ritirato sùbito dal commercio perchè causava effetti psichedelici, e addirittura allucinazioni, raptus, ed amnesie! Un vero e proprio inferno videoludico.
A me personalmente sembra più una bufala che altro, dato che ancòra oggi non se ne sà molto su 'sto videogioco; e nella Rete si possono trovare solo notizie frammentate, apparentemente infondate e gonfiate opportunamente.

Vediamo nel dettaglio e oggettivamente che tipo di contenuti avrebbe potuto avere Polybius.
Secondo la leggenda, il VGame era un classico sparatutto (shoot'em up) a visuale fissa (così ho letto su un blog che trattava del gioco). Io sono appassionato di videogiochi retrò, e sò che nel periodo in questione (1981) erano molto in voga nei cabinet i giochi sparatutto «spaziali», quindi in Polybius è plausibile immaginarci un'astronave, in grafica-vettoriale dell'epoca. Il nemico (gli avversari nello shoot'em up) probabilmente era costituito da un'altra astronave che si muoveva davanti a quella del giocatore evadendo i colpi e sparando. Ora vediamo la parte che preferisco: gli effetti psichedelici! Come si possono indurre delle allucinazioni nel giocatore? Bèh, allucinazioni vere e proprie sono difficilmente ottenibili (dallo schermo di un cabinet di un VGame pubblico), ma pensiamo un attimo: esistono artificii grafici per indurre distorsioni visive della realtà? Certamente! Quelle spirali che si vedono su YouTube sono perfette: se le si fissa per qualche minuto, la conseguenza sarà una simpatica illusione ottica che produrrà una distorsione degli oggetti che si osservano. Quindi costituirebbero un'ottima grafica di sfondo per una nostra versione di Polybius.
I suoni: sono la parte nascosta e più importante per far sì che il giocatore venga «assorbito» dall'esperienza videoludica. E allora cerchiamo un suono che sia ipnotico. Una risonanza sarebbe perfetta (soprattutto se si ascolta tramite cuffie), e poi anche dei toni binaurali; e dato che il cervello dev'essere bombardato di informazioni, anche una musica molto ripetitiva e violenta, ad esempio qualcosa di simile a "f-zero" della nota console Nintendo.

Esiste un remake di Polybius, ma è solamente per Window$ (quindi non ho potuto provarlo); ma "chi fà da sè lo fà come gli piace!:P" quindi ho utilizzato Blender per creare la mia personale versione di Polybius. Risultato? Una nausea pazzesca! Già alla fine del primo livello passa ogni voglia di guardare lo schermo, per almeno mezz'ora; e poi si prova un senso di rincretinimento molto forte. Da un certo punto di vista, è ideale per sfide di resistenza con gli amici!

E' disponibile il download della mia versione, dal Forum: http://unofficialhj.gotdns.org/viewtopic.php?f=32&t=339
Si tratta di una versione alpha, ma per maggiori informazioni leggete il topic!

Buona esperienza inferno-ludica :D


d0ct0r

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


*********************
* 0x05 :: TrueCrypt *
*********************


Ognuno ha i propri gusti, idee preconcette, abitudini, comodità, ecc.; ciononostante sono pronto a scommettere che non esiste qualcosa di meglio di TrueCrypt: il miglior freeware opensource di OnTheFlyEncription per volumi (archivi crittati, su singolo file) e intere partizioni, usabile senza installare nulla, via command line e/o GUI, per GNU/Linux, MacOSX, Window$.

Con TrueCrypt, vi montate il vostro bel volume crittato (costituito da un singolo file su HD/CD/DVD/pendrive/floppy/ecc. oppure da una intera partizione) previo inserimento di passphrase (o di key file), e leggete da esso (OnTheFlyDecription) il vostro bel film (che avete precedentemente salvato dentro il volume stesso), senza rellentamenti di sorta.

Leggete e scrivete OnTheFly nel vostro volume, senza preoccuparvi di nulla, come se non fosse affatto crittato: nessun file temporaneo (nessun buffer) verrà mai creato da TrueCrypt per effettuare tutti gli accessi read/write; insomma tutto è sempre costantemente crittato. E potete montare anche 32 (trentadue) volumi contemporaneamente.

TrueCrypt è portatile: si può installare ma non ne ha bisogno ("traveler mode").

Ma, soprattutto, è multipiattaforma: condizione essenziale per evitare qualsiasi contrattempo quando un SO è in panne ed occorre accedere ai volumi crittatti tramite un'altro SO completamente diverso, sempre senza installare alcunchè.

Per capire bene i volumi crittati nascosti ("hidden volumes"), oltre ai volumi normali ("outer volumes"), niente è meglio dei docs originali:
http://www.truecrypt.org/docs/
Ma si può anche incominciare da wikipedia:
http://it.wikipedia.org/wiki/TrueCrypt
http://sicurezza.html.it/articoli/stampa/1745/truecrypt-proteggiamo-i-nostri-dati-riservati-da-a/


Dalla vers.4.3 ho adottato TrueCrypt con fiducia, nell'uso quotidiano. Ho ancòra a che fare con dei files di volumi creati con la v.4.3 (si aprono anche con le versioni successive); difatti l'unico inconveniente è che non si possono aprire files creati con versioni successive, ma la retrocompatibilità c'è tutta.
Usare TrueCrypt tramite GUI, è elementare e a prova di idiota; anche usando i comandi da terminale è praticamente impossibile sbagliare, ma comunque scrissi 'sto mini memorandum per convincere qualche scettico ed addurlo all'uso di TrueCrypt:


---- Uso elementare di TrueCrypt via command line (console interattiva) ----

Per creare un nuovo volume cifrato normale (alias "outer volume", alias volume cifrato «non nascosto»), digitare:

 truecrypt -c [invio]

-- poi scegliere "1" per tipo normale;
-- poi specificare un nome (òcio alla dir in cui ci si trova) qualsiasi di file (ad es. "pippo.mio"), non ancòra esistente, oppure di partizione esistente (ad esempio "/dev/sdb9"), oppure di dispositivo esistente (ad es. "/dev/sdd");
-- poi scegliere "1" per filesystem FAT (nelle versioni recenti si fà dopo gli algoritmi);
-- poi specificare la grandezza del nuovo volume, che sia un multiplo di 512B ytes (ad es. "4096", "100K", "50M", "2G");
-- poi scegliere un algoritmo di hash;
-- poi scegliere un algoritmo di cifratura;
-- poi specificare per due volte una password (se è troppo «debole» compare un warning con conferma);
-- poi non specificare un eventuale file di chiavi (se si sà cos'è, allora non c'è bisogno di seguire questo scritto...);
-- poi digitare 320 caratteri casuali seguìti da [invio] (usando la GUI basta muovere il mouse casualmente) per generare il seme random di cifratura.

Finito: il volume è creato =)

--------------------------------

Per creare un nuovo volume cifrato nascosto (alias "hidden volume" alias volume cifrato «nascosto dentro un volume cifrato normale preesistente») occorre innanzi tutto sapere quanto spazio libero è disponibile nel volume cifrato normale che lo dovrà contenere; perciò occorre montare il volume normale preesistente (se non è già montato), ad es. il volume "pippo.mio" da montare nella directory esistente "/PIPPO":
 
 truecrypt -u pippo.mio /PIPPO
oppure (nelle versioni recenti)
 truecrypt pippo.mio /PIPPO

-- poi verificare lo spazio libero leggendo le informazioni ottenute con:

 truecrypt -vl [invio]
oppure (nelle versioni recenti)
 truecrypt -v -l

-- poi smontare il volume normale in questione (dato che non è possibile modificarlo se vi è un accesso in read/write):
truecrypt -d /PIPPO
(ricordando che il nome del punto di montaggio ("/PIPPO") dev'essere specificato come nome completo di percorso)
-- poi procedere con la creazione del volume nascosto (che non ha un nome proprio perchè usa lo stesso nome del volume che lo contiene) all'interno del volume normale (la procedura è similare):
truecrypt -c
-- poi scegliere "2" per tipo nascosto;
-- poi specificare il nome del volume cifrato normale preesistente che lo dovrà contenere (ad es. "pippo.mio", anche nome breve) e che dev'essere attualmente smontato;
-- poi specificare una grandezza inferiore allo spazio libero, che sia un multiplo di 512Bytes (ad es. "4096", "100K", "50M", "2G");
-- poi specificare una password che sia diversa da quella usata per il volume cifrato normale.

Notare che il volume nascosto ha una propria password, ma usa lo stesso nome del volume normale; quindi è possibile creare un solo volume nascosto dentro ciascun volume normale.

--------------------------------

Per montare il volume cifrato normale "pippo.mio" precedentemente creato, nella directory "/PIPPO" già esistente:

 truecrypt -u pippo.mio /PIPPO
oppure (nelle versioni recenti)
 truecrypt pippo.mio /PIPPO

(ricordando che il nome del volume può essere specificato relativamente alla dir in cui ci si trova (nome breve) mentre invece il punto di montaggio ("/PIPPO") dev'essere specificato come nome completo di percorso)

-- poi inserire la password specificata durante la creazione del volume cifrato normale "pippo.mio";
-- poi inserire anche la password-utente attuale (o quella di root).

Un eventuale volume cifrato nascosto, dentro al volume cifrato normale "pippo.mio", sarebbe assolutamente invisibile anche a TrueCrypt stesso; perciò, per evitare che i dati del volume nascosto possano essere sovrascritti da quelli del volume normale, è necessario montare il volume normale proteggendo il volume nascosto, con:

 truecrypt -u -P pippo.mio /PIPPO

-- poi inserire la password per il volume nascosto; mentre invece nelle versioni recenti viene sùbito chiesto se montare il volume normale proteggendo un eventuale volume nascosto:
Protect hidden volume (if any)? (y=Yes/n=No) [No] y [invio]
-- poi inserire la password per il volume nascosto.

In questo modo verrà impedita la scrittura di contenuti che invaderebbero lo spazio dedicato al volume nascosto, e si genererà un messaggio d'avviso.
Solo i contenuti del volume nascosto potrebbero essere sovrascritti accidentalmente, perchè lo spazio disponibile del volume nascosto parte dalla fine dello spazio del volume normale ed arriva fino ad un certo punto (insomma, stà «in coda») mentre invece lo spazio disponibile per il volume normale parte dall'inizio e potrebbe arrivare alla fine se non si indicasse, nel comando, di proteggere lo spazio del volume nascosto.

--------------------------------

Per montare il volume cifrato nascosto, che è stato creato innanzi nel volume cifrato normale "pippo.mio", usare la stessa procedura:

 truecrypt -u pippo.mio /PIPPO

ma inserire la password specificata nella creazione del volume cifrato nascosto, invece di quella del volume normale; mentre invece nelle versioni recenti si fà con:

 truecrypt --protect-hidden=yes pippo.mio /PIPPO

(ricordando che il nome del volume può essere specificato relativamente alla dir in cui ci si trova (nome breve) mentre invece il punto di montaggio ("/PIPPO") dev'essere specificato come nome completo di percorso)

-- poi inserire la password per il volume normale;
-- poi inserire la password per il volume nascosto.

--------------------------------

Per smontare il volume (normale o nascosto: si usa sempre e solo l'unico nome che è quello del volume normale) "pippo.mio", si può indicare il suo punto di montaggio:

 truecrypt -d /PIPPO

(ricordando che il nome del punto di montaggio ("/PIPPO") dev'essere specificato come nome completo di percorso)

oppure si può indicare il suo nome proprio:

 ruecrypt -d pippo.mio

(ricordando che il nome del volume può essere specificato relativamente alla dir in cui ci si trova (nome breve))

Si specifica sempre e solo il nome del volume normale perchè il relativo volume nascosto non ha un nome dedicato, bensì utilizza lo stesso nome del volume normale.

--------------------------------

Per smontare tutti i volumi attualmente montàti:

 truecrypt -d

--------------------------------


E così, con quattro semplici comandi (o con l'uso di una GUI semplicissima ma completa), avete a disposizione tutta la potenza di TrueCrypt :)


tok_tok

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


***************************************************
* 0x06 :: Google e Pac-man, il connubio perfetto! *
***************************************************


[BigG ha recentemente implementato un simpatico doodles giocabile direttamente nella homepage di Google]

Ammettilo! Anche tu, venerdì 21 Maggio, hai aperto, per un motivo o per l'altro, il tuo browser, e ti sei trovato nella tua cara e bella Google home; ma invece di effettuare la ricerca, hai premuto quel tasto "Insert coin" sotto quella grossa scritta di Google "pacmanizzata", e ti sei messo a giocare!

Ebbene sì: Google stupisce ancora... Per il trentesimo compleanno di uno dei videogiochi più amati della storia (Pac-man), il motore di ricerca ha implementato (con un mix di HTML/CSS, JavaScript e Flash) un'applicazione utilizzabile direttamente sulla sua homepage, con tanto di fantasmini, di differenziazione dei livelli, di musichetta, e di easter-egg; insomma: il vero Pac-man formato Google.

L'applicazione però, com'è logico che fosse (dato che si parlava di un compleanno a tutti gli effetti), è stata pienamente utilizzabile per solo due giorni, poi è scomparsa ridandoci la grossa scritta colorata a capeggiare la pagina.

Marcin Wichary, un developer di Google, ha spiegato (come riportato direttamente sul blog di Google) che si è voluto mantenere lo spirito del gioco, quindi sono stati addirittura lasciati i bug originali (oltre che gli stessi suoni), ed un simpatico easter-egg attivabile cliccando per una seconda volta su "Insert coin": solo a quel punto avremmo potuto vedere la moglie del mitico Signor Pac far capolino nel labirinto.

Forse ora che è tutto finito (in senso ludico intendo), ci dispiace non poter perdere quei cinque minuti, ci dispiace non poter più schiacciare quel tasto "Insert coin", e al suo posto ritrovare quel bottone "Mi sento fortunato", che, ammettiamolo, non ci piace più di tanto...
Attenzione però! Google ci ha fatto un secondo regalo, e andando semplicemente su http://www.google.com/pacman/ possiamo continuare a giocare!


dany15gni

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


***********************************
* 0x07 :: Anatomia del Cosmac Elf *
***********************************


Premessa: intorno agli anni '70 c'erano pochissime CPU disponibili sul mercato:
- Intel 4004 e derivati
- Motorola 6800
- Mos 6502 - Zilog z80
- RCA 1802


L'Intel 4004 fu reso pubblico nel '71, il che, nel giro di un paio d'anni, la rese una CPU con un rapporto qualità prezzo veramente sfavorevole.

Nel 1975 uscì invece il Motorola 6800 con un prezzo di 170$; era molto più prestante rispetto all'Intel 4004, e aveva molte raffinatezze, ma il prezzo di 170$ al chip lo rendeva poco appetibile per uno studente (calcolando che sarebbe come se costasse 700$ di oggi).

Sempre nel 1975 usci il MOS 6502, un quasi clone del 6800 della Motorola, ma con un unica differenza: 25$ di prezzo. Il clock di appena 1MHz lo faceva sembrare inizialmente meno prestante, in confronto alle CPU come il Motorola o lo Zilog; ma nonostante ciò vendette milioni di esemplari.

Lo Zilog Z80 uscì nel '76, ed entrò in conflitto con il MOS 6502; aveva un clock superiore, ma anche il prezzo lo era...

Il chip RCA 1802 ha una storia un po' strana; aveva dalla sua 3,5MHz di clock ad un prezzo di 30$, ma fu poco utilizzato se non per due progetti che lo resero molto famoso: i satelliti Voyager e il COSMAC ELF =)
Probabilmente la semplicità,l'elasticità, ed il prezzo contenuto, lo resero adatto per questi due compiti: mandare un biglietto da visita nell'universo, e sopravvivere ad una massa di smanettoni con budget limitato =P

Ok, ora vi descrivo il micro computer:

- costo di creazione negli anni '70s: ~80$ completo in grado di funzionare nuovo (circa 300$ attuali)
- linguaggio di programmazione: linguaggio macchina COSMAC RCA 1802
- niente ROM; 256 Byte di RAM
- display esadecimale (display a segmenti a LED, una caratteristica dei microcomputer)
- tastiera ehm... 8 interruttori per scrivere comandi in linguaggio macchina
- CPU COSMAC 1802 con clock fino a 3,5MHz, e possibilità di gestire fino a 64kB di RAM

Praticamente una scheda mille fori con sopra un processore e 4 LED... il che lo rende appetibile per poter imparare i fondamenti della costruzione/progettazione di un computer, visto che il progetto originale è composto da 9 integrati diversi, anche se in Rete esistono progetti che utilizzano 5 chip =)
Il progetto venne presentato sulla rivista "Popular Electronics" nel 1976, come un computer per smanettare e dal costo molto contenuto, e quindi accessibile anche gli studenti (notoriamente senza un soldo).

A questa pagina trovate lo schema elettrico del microcomputer:

http://img96.imageshack.us/img96/6123/fig14.gif

Ora tenterò di descrivere tutti gli integràti (alias CircuitiIntegrati alias IC) ma saltando il processore, per due motivi: il principio è lo stesso per tutti i processori (quindi con qualche modifica potrete utilizzare anche un processore x86, o un Zilog tirato fuori da un GameBoy o un PIC), e poi andare a spiegare l'architettura di un processore non è una cosa proprio semplice (e vi rimando al datasheet).

------------- Iniziamo ----------------

--------> IC 2,3 è una RAM
Anzi due, per il fatto che un chip avesse solo un address composto da 4 linee e un I/O da 4bit e siccome il processore è di 8bit servono due chip RAM.
I data input sono i piedini dove viene scritto il comando in LM (LinguaggioMacchina), le linee address sono l'indirizzo della memoria dove viene scritto. E' presente inoltre una linea d'entrata e una linea d'uscita.
Ecco il datasheet: http://www.jrok.com/datasheet/mm2101.pdf

--------> IC 4,5 noninverting hex buffer
Praticamente, in questo circuito, pilota lo schermo esadecimale cioè riceve 4 bit in ingresso e attraverso questi dà l'input esadecimale allo schermo esadecimale.. non invertendo (cioè se riceve 1 nella porta x1, allora nella y1 dà 1).
Ecco il datasheet: http://www.datasheetcatalog.org/datasheet/philips/74HC4050.pdf

--------> IC 6,7 hexadecimal led display
Sono due display led esadecimali... cioè riescono a "scrivere", oltre alle cifre decimali 0...9, anche le cifre esadecimali A, B, C, D, E, F "15" in decimale corrisponde a "F" in esadecimale, mentre il valore massimo "255" (anche se il conteggio totale ha 256 valori, considerando anche il valore 0) corrisponde a:
decimale = 255
esadecimale= FF
binario = 11111111 (cioè un byte con tutti gli 8bit settati a 1)

--------> IC 8,9 quad bilateral switch.
Uno switch è un interruttore... questi integrati ne contengono 4 con in più i pin di controllo.

--------> IC 10 triple 3-input NAND gate IC
Sono tre porte NAND in un unico integrato, ovvero degli inversi rispetto alla AND (una porta AND dà 1 in output solo quando da entrambi i pin di input riceve un 1; la porta NAND invece dà 1 in output in tutti i casi tranne uno: quando tutti ed due i pin in input hanno 1).

--------> IC 11 inverting hex buffer IC
Simile a ic 4/5, con l'unica differenza che inverte.

--------> IC 12 dual flip flop D
E' detto anche bistabile... nel nostro caso c'è un pin per il clock e altri due, uno in e uno out. Ricevendo un impulso di clock nel pin appropriato, vengono collegati in e out, fino al prossimo ciclo di clock.

--------> IC 13 5-volt regulator IC
Sono spesso scambiati per dei transistor "col buco"... :D hanno tre piedini: uno per la corrente in entrata, uno per la corrente in uscita, e uno per la massa (se si tratta di regolatore con uscita non variabile). Praticamente la tensione in entrata viene abbassata e costantemente mantenuta ad un valore fisso (o variabile, in altri chip) in uscita (che in questo caso è di 5Volt), indipendentemente dalla corrente assorbita dal carico. Il calore che genera è tutta energia sprecata che è proporzionale alla differenza di tensione tra ingresso ed uscita ed anche alla intensità di corrente assorbita dal carico. Tale calore và dissipato tramite semplice piastrina di rame applicata, o tramite profilato in alluminio da fissare tramite avvitatura (dipende dal modello del contenitore dell'IC).

--------> Altro <--------
Per la costruzione del circuito si possono fare delle semplificazioni, come ad esempio omettere i display esadecimali e anche gli hex buffer non inverter e utilizzare dei led stile altair 8800 =), si può anche evitare il 5volt regulator, ma se c'è uno sbalzo di corrente vedrete il vostro RCA volare nello spazio accanto alla sua sorellona Voyager :D

E in più si può utilizzare un solo chip RAM da 8bit =)
Solo con queste abbiamo risparmiato circa 6 chip, ma la semplicità del circuito permette di fare molte più modifiche e/o espansioni =)

Vi lascio in fine come link http://incolor.inebraska.com/bill_r/elf/html/elf-1-33.htm e http://www.cosmacelf.com


turbocotoletta

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


************************************
* 0x08 :: Considerazioni sul suono *
************************************


Sound, considerazioni sul suono negli strumenti musicali e nella vita.
Dopo aver rimesso in sesto l'oscilloscopio, ho iniziato a sperimentare un po' di tutto, arrivando alla musica; e sono giunto ad alcune considerazioni sul come si sviluppa un suono.

Ecco l'impianto per l'esperimento:
http://img709.imageshack.us/img709/7388/dsc02152m.jpg

Un banalissimo flauto di plastica suonato alle elementari, collegato all'oscilloscopio tramite un microfono ricavato smontando una cornetta telefonica.

Piccola nota: per questa esperienza ci basti sapere che la scala delle note musicali, in pressochè tutti gli strumenti, è DO, RE, MI, FA, SOL, LA, SI, e che questa si ripete aumentando le relative frequenze (cioè i suoni si acutizzano). Praticamente attraverso il sistema sopra descritto possiamo riconoscere la forma d'onda e l'ampiezza (l'intensità) con cui viene emessa.

Ora, ecco un'immagine mentre emetto un SI dal flauto:
http://img249.imageshack.us/img249/5066/dsc02156r.jpg

Come si può vedere dalla forma d'onda, essa è relativamente ridotta.

Questa invece è mentre che emetto un SOL dal flauto:
http://img338.imageshack.us/img338/9797/dsc02159h.jpg

come si può vedere, l'onda è molto più complessa... Questo perchè un flauto ha tanti buchi che «modificano» il suono emesso

___-----------------------------------------/|
___    0   0   0   0   0   0   0   0         | <---- schematizzazione flauto
   '''''''''''''''''''''''''''''''''''''''''\|

Praticamente soffiando nel beccuccio una membrana vibra (in alcuni strumenti come il clarinetto è definita oncia) creando un'onda. Essa quanti meno buchi trova aperti, tanto più deve rimbalzare all'interno del flauto.
Più buchi trova chiusi e più il suono è basso, generando un'onda più potente.
La nota SI viene generata chiudendo il primo buco, mentre la nota SOL si genera chiudendo i primi 3 buchi.

Quindi:
1. La nota SI viene generata tappando un solo buco, quindi l'onda può uscire dagli altri buchi, creando un suono più acuto.
2. La nota SOL viene generata tappando tre buchi, quindi l'onda è costretta a rimbalzare più volte all'interno del corpo del flauto, quindi raggiunge la membrana del microfono in modo più corposo e genera di conseguenza un'onda di maggiore intensità.


Detto questo quindi, possiamo riassumere che i suoni acuti sono emessi con un'onda molto più corta (maggiore frequenza) rispetto ai suoni più bassi (infatti il SOL è più basso del si).

Un'altra prova della teoria, che tutti possono verificare, è quella di sollecitare un elastico: più è teso e meno escursione avrà quando verrà pizzicato, generando un suono più acuto.


Hack the planet, o almeno tentaci =D


turbocotoletta

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


******************
* 0x09 :: Riddle *
******************


Testiamo le tue abilità crittoanalitiche!

Questo riddle si divide in 3 livelli. Buona fortuna!

Livello Base:

QnJhdm8hIEludmlhY2kgJ3R1bnonIHZpYSBlbWFpbCBlIGh
haSBwYXNzYXRvIGlsIGxpdmVsbG8gYmFzZSEKCkludGVybW
VkaW86IApWYWkgc3UgcXVlc3RvIGxpbms6IHVnZ2M6Ly91d
mdhYmdyLnRiZ3FhZi5iZXQvZXZxcXlyLzAxMDkyODQudWd6

Suggerimento: Il testo è cifrato con un algoritmo numerico che inizia per 'B' e non richiede password!


Inviateci le soluzioni a mailhitnote@gmail.com

I nomi/nick/siti web personali dei vincitori verranno pubblicati sul prossimo numero.


r0b0t82

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


**************************
* 0x0A :: Ringraziamenti *
**************************


Per questo numero si ringrazia, in ordine alfabetico:
dany15gni, d0ct0r, r0b0t82, tok_tok, turbocotoletta

La ezine HITNOTE è a cura dello staff di Unofficial HJ Forum:
http://unofficialhj.gotdns.org

Il sito ufficiale di HITNOTE è:
http://hitnote.gotdns.org

Inviateci critiche, insulti, suggerimenti o tutto quel che vi passa per la testa a:
mailhitnote@gmail.com

Il canale IRC su cui ci incontriamo è:
#ezine @ unofficialhj.gotdns.org:6667 [6697 via SSL]
            