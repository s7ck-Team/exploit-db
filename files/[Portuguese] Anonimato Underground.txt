+                    +                     +         +
                               +                  +           +
        +                                             +
                                     \ /
                    +     _        - _+_ -                   ,__
      _=.    .:.         /=\       _|===|_                  ||::|
     |  |    _|.        |   |     | |   | |     __===_  -=- ||::|
     |==|   |  |  __    |.:.|   /\| |:. | |    |   | .|| : |||::|
     |  |-  |.:|_|. :__ |.: |--|==| |  .| |_   | ' |. ||.  |||:.|
   __|. | |_|. | |.|...||---|  |==| |   | | |_--.     ||   |||. |
  |  |  |   |. | | |::.||: .|  |==| | . : |=|===|    :|| . ||| .|
  |:.| .|   |  | | |:.:|| . |  |==| |     |=|===| .   |'   | |  |
  |     |      |   |   |'           :   .   |   ;     ;    '    |
  '     :      '   :   '            .       '  .      .         :
  '     .                   BotecoUnix.com.br         .
  '                .                .                           '
                        .                 
       _
      ( \
       \ \
       / /                |\\
      / /     .-`````-.   / ^`-.
      \ \    /         \_/  {|} `o
       \ \  /   .---.   \\ _  ,--'
        \ \/   /     \,  \( `^^^    http://code.google.com/p/bugsec
         \   \/\      (\  )           http://BotecoUnix.com.br
          \   ) \     ) \ \             http://garageCode.tk                      ____ _________________
           ) /__ \__  ) (\ \___                                                  |____|________________ \
          (___)))__))(__))(__)))                                                 |    |                \_\__ 
-------------------------------------------------------------------+             |    |                /____\
   _____                       .__             ___________         |             |    |                 \_+_/ 
  /  _  \   ____   ____   ____ |__| _____ _____\__    ___/___      |             |    |               /      \ 
 /  /_\  \ /    \ /  _ \ /    \|  |/     \\__  \ |    | /  _ \     |             |    |              /    |   \
/    |    \   |  (  <_> )   |  \  |  Y Y  \/ __ \|    |(  <_> )    |             |    |
\____|__  /___|  /\____/|___|  /__|__|_|  (____  /____| \____/     |             |    |
        \/     \/            \/         \/     \/                  |             |    |
                 +---------------------------+                     |             |    |
                 | 1-Faces da moeda          |                     |             |    |
                 | 2-Condições do anonimato  |                     |             |    |   
                 | 3-Solução para anonimato  |                     |             |    |   
                 | 4-Instalando Tor+privoxy  |                     |             |    | 
                 | 5-ficando anonimo         |                     |             |    |
                 | 6-UserAgents              |                     |             |    |
                 | 7-Usando LibCurl          |                     |             |    |
                 | 8-Plano B                 |                     |             |    |
                 | 9-Agradecimentos          |                     |             |    | 
                 | 10-referências            |                     |             |    | 
                 | 11-Video aula             |                     |             |    | 
                 +---------------------------+                     |             |    |
                                                                   |             |    |
                     Escrito por Cooler_                           |             |    | Contact: c00f3r@gmail.com
___________________________________________________________________|_____________|____|______________________________________________

=====================================================================================================================================



* Introdução

  Como vão caros leitores  bom isso é um paper de uma vídeo aula que fiz de como ficar anonimo. aqui você vai aprender
  malandragens do meio Underground para ajudar na tarefa de como anonimato pode ter seus 
  paradigmas em diferentes formas, vou mostrar uma das mais populares formas para o mesmo e de como usar programas
  como Nmap, Nc, seus programas em Perl e C com anonimato...
 

1 - Faces da moeda I  "O SysAdmin".

 * O todo Poderoso SysAdmin e sua Atividade 

   SysAdmins de Linux*,BSD* e Unix Like em geral sempre estão em estudo constante, acompanhando o desenvolvimento dos
  seus sistemas e os "alert" de segurança para atualizar seus softwares de seus servidores, sysAdmins bons preferem
  se defender antes de serem atacados por isso usam ai uma gama de programas, que ajudam a monitorar o servidor como
  MTR, Cacti, Snort(ótimo detector de intruso loga tudo), além de ter sues scripts para ajudar a passar um pente nos logs
  do apache, lighttpd e outros servidores, bom usuários *BSD dispõem do melhor firewall do mundo o Packet filter fora
  os Kernels do NetBSD e OpenBSD que são menos providos de XPLs 0day, packet filter tribla ataques fingerprint diferente
  do iptables que mesmo com layer 7 scans com nmap customizados podem descobrir buracos. SysAdmins possuem muitas Certs
  e milhares de artigos de como instalar apache, samba, squid, snort maioria vivaolinux e afins, quanto aos certos certificados
  usam para competir entre eles no mercado certas vagas para controlar servidores, clusters maiores etc. Mas tudo não passa
  de decoreba levantando o fato das provas serem todas por alternativas de comandos que não precisa usar o cérebro!
  Bom falamos o lado bom dos sysadmins. O lado Ruim é que muitos não sabem programar ficam presos em configurações do samba
  ldap outras tarefas que a eles são apenas tarefas para se decorar ou fazer um shell script para o mesmo, alguns estão nem
  ai para segurança por causa de salários ruins e outros motivos, fim de carreira não é nem lembrado mesmo por que nunca 
  criou nada apenas configurou, então créditos vão para sysadmin atual e não para o EX sysadmin. Alguns ficam na ilusão de 
  um salario de 5 mil por mês e ficam presos ao mesmo outros viram chefe de sua sessão e tiram ai 10 a 15 mil, mas não são
  lembrados no fim da cerreira. Muitos acima com ego gigante e ficam egoístas e tals. São diferentes dos Developers.
  Você sabe o nome do cara que faz backup nos HD RAID na IBM e faz a configuração ? pois é, difícil até achar o nome de um
  cara destes. Por este fato e outros é bom tentar saber tudo em sua volta em T.I ser design, programador um poco de tudo... 
  
 * Quando a casa "realmente" cai para o SysAdmin

   Bom muitas vezes SysAdmins tem que enfrentar problemas ou diversos motivos por exemplo, um Cracker derruba o servidor 
  devido a um ataque Smurf ala flood UDP ou FIN, SYN. O servidor cai os Webdesigners e o pessoal do suporte já fica louco
  claro que este problema só aparece se o SysAdmin for iniciante, mas estudando o Sysadmin noob descobre como usar o iptables
  para bloquear estes tipos de ataque e logar quando tiver sido atacado. Outro caso o sistema teve uma falha em que permitiu
  o atacante obter Root do sistema e como o atacante é experiente botou um Backdoor com rawsockets fazendo assim a porta
  do backdoor não aparecer nos snifing e no nmap. O Sysadmin acha que ta tudo OK mais sua maquina é um Zumbi ambulante um
  dia a polícia federal forense cai em cima e aprende o servidor para ver os logs do invasor e tals simplesmente a empresa 
  perde o armário de hacks de servidores de valor de uns 30 mil durante 2 mês a 6 mês sabe como estas coisas são lentas
  chefe manda embora o sysamdin pelo prejuízo. Um nobreak que pifa ou a bateria acaba servidores cai. Em fim milhares de
  casos um SysAdmin pode ver seu castelo cair drasticamente...


1 - Faces da moeda II "O Invasor"

 * A cabeça do Invasor
 
  Em geral um atacante rotulado como "Invasor" sempre tem uma coisa em mente, poder ser Deface(arte de pixar sites), hostar
 um software para deixar o servidor como um Zumbi para ataques Smurf, DoS usar como ircbot, usar para Spam fins maléficos
 em geral pelos diversos motivos Psycologicos entre eles vingança, carência dos pais, falta de verba, querer ser melhor que
 os "Outros", protesto. Grande maioria não ta nem ai para anonimato mas os "expert" da old School sempre queimam os logs além
 de recria-los com "strings significativas" e queima-los de novo e recria-los de novo... assim polícia forense não consegue
 recuperar a quinta camada dos logs e se confunde com as informações adqueridas, fora os cuidados de Proxy, UserAgent que 
 vou explicar aqui que ajudam no anonimato. Alguns novos atacantes obtem acesso a redes wireless sem senha ou quebram
 senhas "Wep", usando assim a conexão de uma pessoal para poder fazer seus ataques o que dificulta na investigação. Outros
 atacantes além de usar redes wireless de outros usam Proxys e até mesmo máquinas virtuais dentro de sua mesma máquina para 
 dificultar ainda mais, caso forem pegos eles deletam suas máquinas virtuais que fazem ataques, fora os que usam Live CD de 
 pentest... bom está uma zona de possibilidades desta face da moeda, ainda com ferramentas de sobra para tentar diversos 
 ataques.

 * Quando a casa cai para "O Invasor"
 
  É um fato estranho quando vemos mais bankers serem presos por exporem seus endereços e dados em transferências ou terem 
 laranjas safados quebrando seus atos maioria deles quando são presos e são expostos a mídia são chamados de Hackers.
 Bom neste meio a vários rótulos, mas sempre é possível saber quando a casa vai cair por exemplo se o atacante anda 
 tendo muitos lucros sempre bom pagar um advogado deixar ele apar de tudo, assim se algo ocorrer ele te tira rapidamente.
 Mas nem tudo é um mar de rosas quando o vento vem forte ele sempre leva alguma coisa, por isso é bom não mexer com
 o lado negro da força, pois tudo tem seu Karma sempre pesa algum dia. Levando em conta que invasão no brasil pode levar
 de 2 semanas de cadeia á 2 anos, poco tempo ? Se tu acha que passar 2 anos em uma cela lotada com 6 a 12 homens é poco
 bom este paper não quer te influenciar a fazer nada, não respondo pelos seus atos nem pelas escolhas...

 
2 - Condições do anonimato 

 * Analisando o Lado do "SysAdmin"
  Antes de ir direto ao ponto temos que entender o SysAdmin. Aprender a usar os IDs mais popular como Snort, aprender a ver
 Logs do Sistema em geral como exemplo vamos ver log do apache:

 cat  /var/logs/apache/error_log | tail

[Fri Jan 15 11:39:06 2010] [notice] Apache/2.2.14 (Unix) PHP/5.2.12-pl0-gentoo mod_ssl/2.2.14 OpenSSL/0.9.8l configured -- resuming normal operations
[Fri Jan 15 16:17:14 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Fri Jan 15 16:17:17 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/favicon.ico
[Fri Jan 15 16:17:29 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/SAFADO.exe
[Fri Jan 15 16:17:55 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/c99.php <---Suspeito
[Fri Jan 15 16:17:55 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/cpanel
[Fri Jan 15 16:19:45 2010] [error] [client 127.0.0.1] File does not exist: /var/www/localhost/htdocs/cpanel/index.cgi?pass=asas*/*/ <---Suspeito

estrutura
 DATA   Hora  ano  "classe do erro"  "IP"              "causa"                   "local"

Se nós fizermos um ataque com "nikto" um programa qualquer para descobrir vulnerabilidades sendo irracional, ao vermos os logs do 
apache, vamos ver várias URLs que nem tem no Host vários erros nos logs o que ja pode gerar desconfiança por parte do SysAdmin, tirando 
logs do Apache temos logs de SSH etc...

tem uns sistemas de Web que loga também além do IP o UserAgent também então são duas coisas para se preocupar...

Então já vimos por que esconder o IP, obvio para não achar nosso endereço, o UserAgent é uma ótima idéia para simular um OS e um
navegador assim o sistema não suspeita de um Robot, Bot, Spider. Podemos simular até um UserAgent por tentativa de ataque
lembrando que UserAgent é útil apenas para obter informações de um sistema Web...


3 - Solução para Anonimato

 * Solução de anonimato por Proxy
 
   +--> O que é Proxy ?
    É um servidor que atende a requisições repassando os dados do cliente a frente. Um usuário (cliente) conecta-se a um servidor proxy, 
   requisitando algum serviço, como um arquivo, conexão, website, ou outro recurso disponível em outro servidor.

   Um servidor proxy pode, opcionalmente, alterar a requisição do cliente ou a resposta do servidor e, algumas vezes, pode disponibilizar 
   este recurso sem nem mesmo se conectar ao servidor especificado. Pode também atuar como um servidor que armazena dados em forma de cache 
   em redes de computadores. São instalados em máquinas com ligações tipicamente 		 
   superiores às dos clientes e com poder de armazenamento elevado.
   Esses servidores têm uma série de usos, como filtrar conteúdo, providenciar anonimato, entre outros.

  *O sistema de proxy que vamos usar -> TOR + Privoxy
  
  +--> O que é Tor ?
   Tor (The Onion Router - O roteador Onion)  ajuda a organizações e pessoas a melhorar sua segurança na internet.  É um software gratuito de 
  implementação  da segunda geração onion routing —  Um sistema que permite que usuários se comuniquem anonimamente na internet. Originalmente 
  foi patrocinado pela the US Naval Research Laboratory, Tor veio a se tornar um projeto da Electronic Frontier Foundation (EFF) no fim de  2004.
  Tor é um software que o protege contra análise de tráfico, uma forma de vigilância que ameaça a liberdade e privacidade, negócios confidenciais, 
  relacionamentos e a segurança de Estado. Tor protege você distribuindo sua comunicação através de uma rede voluntária de transmissores ao redor 
  do mundo, isto previne que alguém monitore sua conexão e veja qual sites você acessa,  também previne que descubram sua localização física 
  (Endereço de IP). Tor funciona com muitos dos programas de computador existentes, incluindo navegadores, clientes de mensagens instantâneas, 
  logins remotos, e outras aplicações baseadas no protocolo TCP.

  Inúmeras pessoas no mundo usam Tor para diferentes propósitos: jornalistas e blogueiros, defensores dos Direitos Humanos, oficiais que aplicam 
  leis, soldados, corporações, cidadãos em regimes repressivos ou simples cidadãos. Veja quem usa Tor, para mais exemplos de típicos usuários.

   O programa foi desenvolvido pelo Laboratório Central da Marinha para Segurança de Computadores, com a ajuda da Darpa (www.darpa.mil), a agência 
  criada no auge da guerra fria com o objetivo de transformar os Estados Unidos em uma superpotência tecnológica. Para quem não se lembra, foi a 
  Darpa (na época sem o D) quem coordenou os estudos para a construção de uma rede descentralizada de computadores, capaz de resistir a qualquer ataque
  localizado. Foi assim que nasceu a Arpanet, o embrião do que hoje chamamos internet.

   O Tor andava meio esquecido, até que a Electronic Frontier Foundation, uma entidade civil que se destaca pelo vigor com que combate nos tribunais os 
  abusos governamentais contra os direitos individuais, decidiu apoiar politicamente o projeto e contribuir financeiramente para que ele cresça, fique 
  forte e consiga deixar cada vez mais gente invisível. A decisão é polêmica, até porque o projeto também é polêmico.

   O Tor mantém o usuário livre de bisbilhoteiros, inclusive os do FBI e os da CIA, e impede (ou dificulta bastante) qualquer tipo de rastreamento. 
  Na prática significa um salvo conduto ou até mesmo um habeas corpus preventivo, como preferem os juristas. A EFF justifica o apoio como forma de 
  dar ao usuário condições tecnológicas (e legais) de garantir sua privacidade no ciberespaço. 

No Tor, cada modo da rede executa o programa como um processo normal de usuário, sem nenhum privilégio especial. Cada modo, chamado onion router (OR), 
mantém uma conexão TLS com cada um dos outros modos da rede. O processo local do usuário é chamado onion proxy (OP), que é responsável por estabelecer 
os circuitos e manipular as conexões do usuário. O onion proxy aceita streams TCP e os encaminha pelo circuito.

Cada modo possui uma identity key e uma onion key. A primeira é maior e é utilizada para assinar os certificados TLS e o router descriptor, que contém 
um sumário das informações do pacote. A onion key é usada para descriptografar requisições de formação de circuito e para negociar as chaves assimétricas 
da criptografia. A onion key de cada modo é trocada periodicamente e independentemente.

Os pacotes de dados têm 512 bytes. O cabeçalho contém o ID do circuito do pacote e um comando que descreve o que fazer com o corpo do pacote. De acordo com
 o comando, os pacotes são vistos como sendo do tipo control, que contêm comandos interpretados pelo modo que o recebe, ou relay, que são os que carregam 
dados. Os pacotes relay contêm um stream ID, um checksum para checar a integridade do pacote, o tamanho dos dados do pacote e um comando. O conteúdo dos 
pacotes são cifrados ou decifrados usando o algoritmo AES de 128 bits utilizando cipher stream.

    2B     1B        509B                        2B        1B       2B        6B       2B      1B   498B
+-----------------------------------+          +----------------------------------------------------------+
|CircID | CMD |         DATA        |          | CircID | Relay | StreamID | Digest | Length | CMD | DATA |
+-----------------------------------+          +----------------------------------------------------------+
    pacote do tipo relay (dados)                     pacote do tipo control (comandos)

O Onion Routing originalmente construía um circuito para cada stream TCP. Mas, como contruir um circuito demanda alguns segundos, isto torna o programa muito
 lento para aplicações que abrem vários streams TCP, como é o caso dos browsers. No Tor, cada circuito pode ser usado por vários streams TCP. Para aumentar a 
segurança, o Tor constrói um novo circuito periodicamente, normalmente a cada minuto. 


4 - Instalando Tor+privoxy 
   
   Para instalar Tor e privoxy não é difícil
   num linux baseado em deb
    #apt-get install tor privoxy
   num linux baseado em rpm
    #yum install tor privoxy
   no arch use pacman,no gentoo procure no emerge...
   BSD ou MAcOS procure nos ports por tor e privoxy
  
 feito a instalação inicie o serviço do privoxy e do tor com o comando
 ./etc/init.d/privoxy start; tor

 Pronto já preparamos o tor e o privoxy

 Caso queira preparar o navegador firefox para rodar com tor

 Baixe o plugin FOXYPROXY no site de complementos do firefox e instale-o.

 Vá em ferramentas e habilite a função navegação privativa.

 Após instalar e peça para ele conectar na rede TOR ficando a imagem verde(conectado la no relógio do windows)
 Obs: Amarelo = Desconectado, Verde = Conectado. Abra o firefox e no canto inferior próximo ao relógio tera o nome 
 FOXYPROXY : DESABILITADO, clique com o botão direito sobre ele e va para OPÇÕES. Acesse "Arquivo" e entre no
 "Assistente TOR" va confirmando as perguntas até quando chegar se está usando o PRIVALIX diga que não apás 
 concluir a configuração feche e abra novamente o firefox. PRONTO agora você esta com 100% de anonimato na internet.

5 - Ficando Anonimo   

 Tendo o Tor e privoxy
 Se desejar testar entre no www.grc.com é Shields Up ou em qualquer site que puxe seu DNS ou IP, você 
 estara indectetavel e pode verificar também em alguns sites o seu provedor de acesso, muitos são em países 
 da europa ou da asia...

 Claro que usar proxy vai deixar a resposta entre cliente e server lenta, tanto que com proxy eu uso o lynx usando o comando Torify
 vou explicar, de o comando "lynx http://www.ip-adress.com/" analise seu ip depois tente "torify lynx http://www.ip-adress.com/"
 veja a diferença por si mesmo. Já que o Lynx não baixa as imagens do servidor então a lentidão do conexão nem fica tão lenta por conta
 do Proxy usar o Lynx é uma boa estratégia...
 
 Podemos também usar "#torify ssh 123.165.0.121" usar outros programas que tem conexão usando a palavra "torify" assim
 obriga o programa usar socks do tor

    caso queira usar com  Gaim hoje pidgin
      indo em Preferences -> Network -> Proxy and configure this:
      Proxy type: Socks 5
      Host: 127.0.0.1
      Port: 9050
    
      Caso queira usar com XChat:
      indo em Settings-> Preferences -> Network -> Network setup -> Proxy server and configure:
      Hostname: 127.0.0.1
      Port: 9050
      Type: Socks5

 Bom a parte de esconder seu IP fica por aqui.
 com uma ultima dica de estudo o protocolo phantom usado no tor,discutido muito na defcon de las vegas no ano de 2008

 http://code.google.com/p/phantom 
 http://en.wikipedia.org/wiki/Phantom_Anonymity_Protocol
 http://www.defcon.net/images/defcon-16/dc16-presentations/brading/defcon-16-brading-wp.pdf

 Outra forma de anonimato seria pegando acesso de uma rede wireless e usar ela para fazer determinada tarefa, problema
 que maioria das redes wireless tem senha maioria WEP, WPA2, alguns deixam sem senha suas redes mais são poucos, mesmo 
 por que coisa mais fácil é colocar senha no router... Bom para quebrar uma senha do tipo WEP, é possível quebrar com 
 AIrcrack porem é preciso ter uma antena e um adaptador Wireless com um bom chipset os mais populares ai são Prism, Orinoco,
 Atheros(com pacote Madwifi) e Ralink(este é o mais popular e fraco) eu tenho um ralink aqui tenho que snifar com wireshark
 salvar e passar pro aircrack... por que o aircrack não suporta snifa com meu chipset... vai saber o por que...

 Mas vou passar a receita:
 conseguido snifar pegando pacotes da rede wireless durante uns 20 minutos vamos tentar quebrar salve os logs numa pasta como wep.cap
 # airdecap-ng -b 00:09:5B:10:BC:5A wep.cap
 # airdecap-ng -w 11A3E229084349BC25D97E2939 wep.cap
 #  airdecap-ng -e 'the ssid' -p passphrase wep.cap
 tem milhares de artigos falando do aircrack ensinando a quebrar WEP, WPA, WPA2 até... só foi um exemplo simples mesmo.

6 - UserAgents        

  O que são UserAgents ?

   Os clientes Web são também chamados "User Agents" ou, simplesmente, Browsers. No passado, por serem os Browsers meras interfaces
   com o usuário, o modelo era "servidor gordo, cliente magro". Contudo, atualmente, existem tecnologias (por exemplo, Applets, Client-side 
   Scripts, Style Sheets, plug-ins ...) que permitem maior grau de programação e processamento do lado do cliente. A expressão cliente, ou 
   "User Agent" se refere, usualmente, ao parceiro de uma sessão HTTP que inicia o pedido ("request") a ser atendido ("response") pelo servidor 
   Web. Na medida que a grande rede mundial (World Wide Web) cresce, em recursos e complexidade, novos tipos de "User Agents" são inventados
   para prover novas funcionalidades junto aos usuários.
 
 UserAgents na Prática:

  Visite o site http://whatsmyuseragent.com/ veja seu UserAgent agora instale o plugin para o firefox "User Agent Switcher" 
  link firefox https://addons.mozilla.org/en-US/firefox/addon/59?id=59
  configure o plugin e veja se o user agent é o mesmo.

 O Pulo do Gato

  Em construções de programas como spiders, bots, scaners de vulnerabilidade trocar o UserAgent ameniza  a idéia do 
  sysadmin suspeitar de ataques pois vendo os logs o SysAdmin vai ver que além de ter vários IPs diferentes os navegadores 
  são diferentes e os sistemas operacionais. Para ter idéia como um  SysAdmin vai ver baixe o Awstats 
  http://www.nltechno.com/awstats/awstats.pl?config=destailleur.fr


7 - Usando LibCurl

Instalando:

 Antes de estudar LibCurl vamos instalar 
 deb ... apt-get install libcurl-dev
 caso de rpm... yum install libcurl-dev
 ai vai velho clichê com seus paradigmas de instalação caso não ache de "search"...


Introdução ao cURL
	
Origem e manutenção do cURL
O cURL se originou com Daniel Stenberg, mas tem contribuições de mais de 600 desenvolvedores. É obviamente uma tecnologia útil 
com uma ampla base de aplicativos.

O cURL foi originalmente projetada como uma forma de mover arquivos entre terminais utilizando diferentes protocolos, como
FTP, HTTP, SCP e outros. Começou como um utilitário de linha de comandos, mas agora também é uma biblioteca com ligações com 
mais de 30 linguagens. Portanto, agora, ao invés de apenas utilizar o cURL da shell, é possível construir aplicativos que 
incorporam essa importante funcionalidade. A biblioteca libcurl também é portátil, oferece suporte para Linux®, sistema 
peracional IBM® AIX®, BSD, Solaris e muitas outras variantes UNIX®.

cURL como biblioteca

Se você acompanhou as linguagens de script ao longo dos últimos 10 anos, deve ter notado uma evidente mudança em suas aparências. 
As linguagens de script como Python, Ruby, Perl e muitas outras não incluem apenas uma camada de soquetes, que pode ser encontrada
em C ou C++, mas também APIs de protocolo da camada de aplicativo. Essas linguagens de script incorporam funcionalidade de nível 
superior que torna a criação de um servidor ou cliente HTTP, por exemplo, trivial. A biblioteca libcurl adiciona  funcionalidade 
semelhante a linguagens como C e C++, mas o faz de forma móvel através de uma grande quantidade de linguagens. Você encontrará 
comportamentos aproximadamente equivalentes para libcurl em todas as linguagens suportadas por ela, embora pelo fato de essas 
linguagens poderem interferir muito (considere C e Esquema), a forma como eles fornecem os comportamentos também pode interferir.

A biblioteca libcurl encapsula o comportamento ilustrado nas Listagens 1 e 2, na forma de uma API para que possa ser utilizado 
por linguagens de alto nível (mais de 30 atualmente). Este artigo oferece dois exemplos de libcurl. O primeiro explora um cliente 
HTTP simples em C (apropriado para construir Web spiders) e o segundo é um cliente HTTP simples em Python.
 
chega de lenga lenga, vou dar um exemplo seguindo as paradigmas definidas aqui, o exemplo foi feito em C, o exemplo usa Tor e um UserAgent definido:

=====================================================================
/*
___________                             __   
\__    ___/______   ____ _____    _____/  |_ 
  |    |  \_  __ \_/ __ \\__  \  /    \   __\
  |    |   |  | \/\  ___/ / __ \|   |  \  |  
  |____|   |__|    \___  >____  /___|  /__|  
                       \/     \/     \/      
  _________                                     ________        __   
 /   _____/ ____  __ _________   ____  ____    /  _____/  _____/  |_ 
 \_____  \ /  _ \|  |  \_  __ \_/ ___\/ __ \  /   \  ____/ __ \   __\
 /        (  <_> )  |  /|  | \/\  \__\  ___/  \    \_\  \  ___/|  |  
/_______  /\____/|____/ |__|    \___  >___  >  \______  /\___  >__|  
        \/                          \/    \/          \/     \/      

author Antonio "Cooler"
http://BotecoUnix.com.br
to compile this  "gcc programa.c -o programa -l curl
before install "libcurl-dev" with apt-get,pkg_add,ports what for OS...
 
Using example:
 ./program http://site.com/asda/sd/asd/index.asp?s="

See the "source.txt" file to analisis the web site code

*/
  #include <stdio.h>
  #include <stdlib.h>
  #include <unistd.h>
  #include <curl/curl.h>
  #include <curl/types.h>
  #include <curl/easy.h>
 
#define w printf
#define wf fprintf
#define source "source.txt"
 

 static size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream) {
    int written = fwrite(ptr, size, nmemb, (FILE *)stream);
    return written;
  }
 
 int main(int argc, char **argv){
    FILE *p; char c; CURL *curl_handle;
    static const char *headerfilename = source; FILE *headerfile;

    if (argc != 2) { 
     wf(stderr,"\x0aTreant Get Source\x0a Coded by Cooler_, tony.unix@yahoo.com.br\x0aUse: match <URL>\x0a"); 
     return 1; 
    }
    remove(source);
    curl_global_init(CURL_GLOBAL_ALL);
    curl_handle = curl_easy_init();
    curl_easy_setopt(curl_handle, CURLOPT_URL, argv[1]);
    curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);
// caso queira usar com tor 
// curl_easy_setopt (curl_handle, CURLOPT_PROXY, "http://127.0.0.1:8118/");
// simulamos o useragent
    curl_easy_setopt(curl_handle, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows; U; Windows NT 5.1; pl; rv:1.9.0.17) Gecko/2009122116 Firefox/3.0.17 ");
    curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, write_data);
    headerfile = fopen(headerfilename,"w");
    if (headerfile == NULL) { 
      curl_easy_cleanup(curl_handle);
      return -1;
    }
    curl_easy_setopt(curl_handle,   CURLOPT_WRITEDATA, headerfile);
    curl_easy_perform(curl_handle);
    fclose(headerfile);
    curl_easy_cleanup(curl_handle);
    return 0;
  }
=====================================

 bem no site oficial você pode ver alguns exemplos do uso de POST e GET, upload, download de arquivos via FTP e HTTP
usando libCurl claro que tem exemplos em Perl, Python, C++ entre outras linguagens. Imagine fazer programas para descobrir
falhas de SQL-injection com LibCurl sem levantar suspeitas, imagine fazer robozinhos para fazer mais diversas tarefas pois 
é leitor ,libcurl tem este poder basta escolher a linguagem que você quer usar para tal feito. Visite http://curl.haxx.se/



8 - Plano B 

+ Quando todo seu plano é destruido e você tem que prestar contas,nimguem pensa nisso nimguem acha que vai ser pego
 Bom quando um perito vê seu IP nos logs do servidor ele estuda hora,data,trace do suspeito etc,geralmente peritos 
 digitais usam ai um OS tipo pentest para foremse como "HELIX",quando eles acham suspeito mandam a cavalaria na sua
 casa pegar seus PCs, não da para adivinhar e eu sei que você não vai quebrar seu computador ao primeiro toque de 
 cirene né ? vamos ao PLANO B

Queima de suspeitas do HD via Software
+Pessoal da foremse consegue recuperar aquivos do seu computador mesmo, sendo FORMATADO o HD porem,á quem diga ai que
 se o HD for formatado varias vezes uma vez com cada algoritmo de remoção diferente pode bloquiar acesso a arquivos aos
 preciosos DADOS,Bem isso é verdade testei com um pentium 3 aqui tentei recuperar com helix e nada.
 Apagar com o fdisk é uma falsa sensação de segurança, você recupera as partições apagadas em menos de 5 minutos com o 
 programa testdisk. Apagar o disco com o "dd if=/dev/zero of=/dev/hdx" apenas formatação rapida, mas não serve para 
 empresas ou governos. Com equipamentos profissionais típicos de agências de espionagem é possível fazer a leitura do 
 magnetismo remanescente onde foi gravado o zero e recuperar as informações.
 
 Em Linux e BSD a opção padrão de segurança total é o programa shred. Por padrão ele grava e regrava e trigrava o seu hd 
 por 25 vezes, cada vez com um padrão magnético diferente. Isso demora uma   eternidade e o hd pega fogo, esquenta muito. 
 você pode fazer isso com comando "shred -n 3 -z /dev/hdx"

 explicando:
 -n 3 significa que será feito apenas 3 gravações consecutivas, com 3 padrões magnéticos diferentes, e não 25 vezes.
 -z significa que o último padrão a ser gravado será zero, ou seja, zera tudo, incluindo o MBR
 /dev/hdx é o drive em questão /dev/hda é drive IDE no master primário, /dev/sda é drive SATA no master primário ou um HD
  USB e assim por diante.

Queima de suspeitas do HD via Criptografia
+Outra opção seria criptografar dados do HD mas isso varia de acordo com o Sistemaa operacinal,OpenBSD mesmo é ninja para 
 fazer isso...

Via Quimica
+vá num terreiro pegue um balde de aço grosso,abra o HD retire o disco magnético coloque lá jogue Diabo Verde desentupidor 
umas 100g ,jogue 6 colher de amonia, abra o HD retire o disco magnético e jogue no balde, jogue gasolina ateh ver o disco 
mergulhado nela pegue um fosforo de longe acenda e jogue no balde, mas antes verifique se gasolina e outros produtos estão
bem longe...

A memória RAM
+Bem peritos digitais conseguem resgatar dados da memória também e o povo do Unix tem que tomar cuidado com a SWAP também
para zerar a memoria RAM tudo que tu tem que fazer é bolar um programa multiprocesso  usando ala fork,threads para encher 
a memoria e travar o PC, exmeplo em linguagem C

// vai travar seu computador famoso Fork Bomb
#include <unistd.h>

int main() {
 for(;;) fork();
 return(0);
}

dificil falar de memoria mesmo por que outra opção seria criar um programa que faz calculos infinitos, assim quando o foremse
for indestigar ira ter muitas dificuldades pois os dados vão estar acima da primeira e segunda camada.

Placa de rede
+trocar o mac da placa de rede,
 # ifconfig eth0 down
 # ifconfig eth0 hw ether 00:00:00:AA:AA:AA (ou o Mac que você achar melhor)
 # ifconfig eth0 up


Por FIM
Melhor tacar fogo em tudo explodir e deixar seus code em um HD Virtual em um servidor seja
FTP,SSH o que for...

"Check sempre eminente principalmente quando tu és Rei,Basta um checkmate e é xadrez" by eu
                            
         .::::::::::.                          .::::::::::.
       .::::''''''::::.                      .::::''''''::::.
     .:::'          `::::....          ....::::'          `:::.
    .::'             `:::::::|        |:::::::'             `::.
   .::|               |::::::|_ ___ __|::::::|               |::.
   `--'               |::::::|_()__()_|::::::|               `--'
    :::               |::-o::|        |::o-::|               :::
    `::.             .|::::::|        |::::::|.             .::'
     `:::.          .::\-----'        `-----/::.          .:::'
       `::::......::::'                      `::::......::::'
         `::::::::::'                          `::::::::::'

9 - Agradecimentos

 Ao pessoal do BotecoUnix
 _Mlk_,Iak,m0nad,nibbles,zepelin,d3lf0 e colt7r
 

10 - Referências   

http://www.torproject.org
http://www.aircrack-ng.org
http://curl.haxx.se

11 - Video Aula do Paper

http://www.4shared.com/file/196920756/7395df1f/anonimo_part1.html
http://www.4shared.com/file/196931243/99f396ef/anonimo_part2.html
http://www.4shared.com/file/196939611/c83783b5/anonimo_part3.html

+Depois de o comando
Unix ou afins "cat anonimo_part1 anonimo_part3 anonimo_part2 > anonimo.zip"
Windows "type anonimo_part1 anonimo_part3 anonimo_part2"

abra o zip e veja o video que esta dentro !

(       "     )                                                          
  ( _  *                                                             
     * (  /              ____                                            
        "     "        _/ /       
       (   *  )    ___/__ |___                                             
         )   "     \__|00  >_/       
        *  _ )        |^_ |            
        (  )   __ _____\  \  
         ( :  { _)         \   
    ______'___//__\   ____, \                                           
     )           ( \_/|______\                                          
   .'             \   |------'|                                        
   |               |  |       |                                
   |               |  |       |     
    \             /  /________|           
    '._/_)_(\__.'   (__,(__,_]                 
    @---()_.'---@                        
            